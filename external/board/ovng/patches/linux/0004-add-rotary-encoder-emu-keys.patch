diff -Naur linux-4.19.31-ti-r18.orig/drivers/input/misc/rotary_encoder.c linux-4.19.31-ti-r18/drivers/input/misc/rotary_encoder.c
--- linux-4.19.31-ti-r18.orig/drivers/input/misc/rotary_encoder.c	2019-04-10 23:46:55.000000000 +0200
+++ linux-4.19.31-ti-r18/drivers/input/misc/rotary_encoder.c	2019-06-20 11:48:18.907127685 +0200
@@ -40,6 +40,8 @@
 
 	u32 steps;
 	u32 axis;
+	u32 keycodes[2];
+	bool emulate_keys;
 	bool relative_axis;
 	bool rollover;
 	enum rotary_encoder_encoding encoding;
@@ -76,7 +78,13 @@
 
 static void rotary_encoder_report_event(struct rotary_encoder *encoder)
 {
-	if (encoder->relative_axis) {
+	if (encoder->emulate_keys) {
+		unsigned int code = (encoder->dir < 0) ?
+			encoder->keycodes[0] : encoder->keycodes[1];
+
+		input_report_key(encoder->input, code, 1);
+		input_report_key(encoder->input, code, 0);
+	} else if (encoder->relative_axis) {
 		input_report_rel(encoder->input,
 				 encoder->axis, encoder->dir);
 	} else {
@@ -234,6 +242,9 @@
 		return -EINVAL;
 	}
 
+	encoder->emulate_keys = (device_property_read_u32_array(dev,
+			"linux,keycodes", encoder->keycodes, 2) == 0);
+
 	device_property_read_u32(dev, "linux,axis", &encoder->axis);
 	encoder->relative_axis =
 		device_property_read_bool(dev, "rotary-encoder,relative-axis");
@@ -258,11 +269,15 @@
 	input->id.bustype = BUS_HOST;
 	input->dev.parent = dev;
 
-	if (encoder->relative_axis)
+	if (encoder->emulate_keys) {
+		input_set_capability(input, EV_KEY, encoder->keycodes[0]);
+		input_set_capability(input, EV_KEY, encoder->keycodes[1]);
+	} else if (encoder->relative_axis) {
 		input_set_capability(input, EV_REL, encoder->axis);
-	else
+	} else {
 		input_set_abs_params(input,
 				     encoder->axis, 0, encoder->steps, 0, 1);
+	}
 
 	switch (steps_per_period >> (encoder->gpios->ndescs - 2)) {
 	case 4:
